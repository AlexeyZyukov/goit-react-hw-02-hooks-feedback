{"version":3,"sources":["components/feedback.module.css","logo.svg","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/notification.js","components/Statistics/Statistics.js","App.js","reportWebVitals.js","index.js","components/Section/section.module.css"],"names":["module","exports","Section","title","children","className","styles","section","FeedbackOptions","arrayKeysFromState","onClickFn","buttonsBlock","map","item","type","name","onClick","string","charAt","toUpperCase","slice","toLowerCase","Notification","message","statistic","Statistics","totalFeedback","positiveFeedback","arrayFromStateEntry","statistics","table","row","App","props","onBtnClick","param","setState","prevState","countTotalFeedback","Object","values","state","reduce","acc","value","countPositiveFeedbackPercentage","good","total","Math","round","neutral","bad","wrapper","keys","this","entries","Component","PropsTypes","PropTypes","number","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yKACAA,EAAOC,QAAU,CAAC,QAAU,0BAA0B,WAAa,6BAA6B,UAAY,4BAA4B,MAAQ,0B,2HCDjI,I,8CCGA,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASC,UAAWC,IAAOC,QAA3B,UACGJ,GAAS,6BAAKA,IACdC,K,oBCgBQI,EAhBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,mBAAoBC,EAAvB,EAAuBA,UAAvB,OACtB,qBAAKL,UAAWC,IAAOK,aAAvB,SACGF,EAAmBG,KAAI,SAAAC,GAAI,OAC1B,wBACEC,KAAK,SACLT,UAAWQ,EACXE,KAAMF,EAENG,QAAS,kBAAMN,EAAUG,IAL3B,UAPUI,EAcCJ,EAbRI,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,GAAGC,gBAU7CR,GAXG,IAAAI,QCWDK,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,mBAAGlB,UAAWC,IAAOkB,UAArB,SAAiCD,OCyCxBE,EAvCI,SAAC,GAKb,IAJLC,EAII,EAJJA,cACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,oBACAL,EACI,EADJA,QAEA,OACE,8BACqB,IAAlBG,EACC,cAAC,WAAD,UACE,wBAAOrB,UAAWC,IAAOuB,WAAzB,UACGD,EAAoBhB,KAAI,SAAAC,GAAI,OAC3B,cAAC,WAAD,UACE,uBAAOR,UAAWC,IAAOwB,MAAzB,SACE,qBAAIzB,UAAWC,IAAOyB,IAAtB,UACE,gCAnBJd,EAmBiBJ,EAAK,GAlB7BI,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,GAAGC,eAkBtC,QACA,6BAAKR,EAAK,WAJDA,EAAK,IAhBlB,IAAAI,KAyBJ,wBAAOZ,UAAWC,IAAOwB,MAAzB,UACE,+BACE,yCACA,6BAAKJ,OAEP,+BACE,qDACA,+BAAKC,EAAL,mBAMR,cAAC,EAAD,CAAcJ,QAASA,OC/BzBS,E,kDAOJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAQRC,WAAa,SAAAC,GACX,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJF,EAAQE,EAAUF,GAAS,OAZf,EAiBnBG,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKC,OAAOC,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,IAlBpD,EAoBnBC,gCAAkC,WAChC,IAAQC,EAAS,EAAKL,MAAdK,KACFC,EAAQ,EAAKT,qBACnB,OAAOS,EAAQC,KAAKC,MAAOH,EAAOC,EAAS,KAAO,GArBlD,EAAKN,MAAQ,CACXK,KAAM,EACNI,QAAS,EACTC,IAAK,GALU,E,0CA0BnB,WACE,OACE,cAAC,WAAD,UACE,sBAAK9C,UAAWC,IAAO8C,QAAvB,UACE,cAAClD,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEM,mBAAoB8B,OAAOc,KAAKC,KAAKb,OACrC/B,UAAW4C,KAAKpB,eAIpB,cAAChC,EAAD,CAASC,MAAM,aAAf,SACE,cAAC,EAAD,CACEuB,cAAe4B,KAAKhB,qBACpBX,iBAAkB2B,KAAKT,kCACvBjB,oBAAqBW,OAAOgB,QAAQD,KAAKb,OACzClB,QAAQ,oC,GAjDJiC,aAAZxB,EACGyB,WAAa,CAClBX,KAAMY,IAAUC,OAChBT,QAASQ,IAAUC,OACnBR,IAAKO,IAAUC,QAsDJ3B,QC1DA4B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfA5D,EAAOC,QAAU,CAAC,QAAU,4B","file":"static/js/main.73bb18f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"feedback_wrapper__1rL0t\",\"statistics\":\"feedback_statistics__26LhS\",\"statsItem\":\"feedback_statsItem__VdnWp\",\"table\":\"feedback_table__285Yr\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import PropTypes from 'prop-types';\nimport styles from './section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={styles.section}>\n      {title && <h2>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import React, { Fragment } from 'react';\nimport styles from '../feedback.module.css';\n\nconst uppCase = string => {\n  return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n};\n\nconst FeedbackOptions = ({ arrayKeysFromState, onClickFn }) => (\n  <div className={styles.buttonsBlock}>\n    {arrayKeysFromState.map(item => (\n      <button\n        type=\"button\"\n        className={item}\n        name={item}\n        key={item}\n        onClick={() => onClickFn(item)}\n      >\n        {uppCase(item)}\n      </button>\n    ))}\n  </div>\n);\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../feedback.module.css';\n\nconst Notification = ({ message }) => {\n  return (\n    <>\n      <p className={styles.statistic}>{message}</p>\n    </>\n  );\n};\nNotification.propTypes = {\n  message: PropTypes.string,\n};\nexport default Notification;\n","import React from 'react';\nimport { Fragment } from 'react';\nimport Notification from '../Notification/notification';\nimport styles from '../feedback.module.css';\n\nconst uppCase = string => {\n  return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n};\n\nconst Statistics = ({\n  totalFeedback,\n  positiveFeedback,\n  arrayFromStateEntry,\n  message,\n}) => {\n  return (\n    <div>\n      {totalFeedback !== 0 ? (\n        <Fragment>\n          <table className={styles.statistics}>\n            {arrayFromStateEntry.map(item => (\n              <Fragment key={item[0]}>\n                <tbody className={styles.table}>\n                  <tr className={styles.row}>\n                    <td>{uppCase(item[0])}: </td>\n                    <td>{item[1]}</td>\n                  </tr>\n                </tbody>\n              </Fragment>\n            ))}\n            <tbody className={styles.table}>\n              <tr>\n                <td>Total: </td>\n                <td>{totalFeedback}</td>\n              </tr>\n              <tr>\n                <td>Positive feedback: </td>\n                <td>{positiveFeedback} %</td>\n              </tr>\n            </tbody>\n          </table>\n        </Fragment>\n      ) : (\n        <Notification message={message} />\n      )}\n    </div>\n  );\n};\nexport default Statistics;\n","import logo from './logo.svg';\nimport PropTypes from 'prop-types';\nimport './App.css';\n\nimport { Fragment } from 'react';\nimport { Component } from 'react';\nimport Section from './components/Section/Section';\n\nimport styles from './components/feedback.module.css';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\n\nclass App extends Component {\n  static PropsTypes = {\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0,\n    };\n  }\n\n  onBtnClick = param => {\n    this.setState(prevState => {\n      return {\n        [param]: prevState[param] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  };\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div className={styles.wrapper}>\n          <Section title=\"Please leave feedback\">\n            <FeedbackOptions\n              arrayKeysFromState={Object.keys(this.state)}\n              onClickFn={this.onBtnClick}\n            />\n          </Section>\n\n          <Section title=\"Statistics\">\n            <Statistics\n              totalFeedback={this.countTotalFeedback()}\n              positiveFeedback={this.countPositiveFeedbackPercentage()}\n              arrayFromStateEntry={Object.entries(this.state)}\n              message=\"There is no feedback\"\n            />\n          </Section>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"section_section__xQV_z\"};"],"sourceRoot":""}