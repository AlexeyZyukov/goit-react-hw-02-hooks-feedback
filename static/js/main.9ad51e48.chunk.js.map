{"version":3,"sources":["components/feedback.module.css","components/Section/section.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/notification.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","section","FeedbackOptions","arrayKeysFromState","onClickFn","buttonsBlock","map","item","type","name","onClick","string","charAt","toUpperCase","slice","toLowerCase","Notification","message","statistic","Statistics","totalFeedback","positiveFeedback","arrayFromStateEntry","statistics","table","row","App","useState","good","setGood","neutral","setNeutral","bad","setBad","objectState","countTotalFeedback","Object","values","reduce","acc","value","wrapper","keys","prevState","total","Math","round","countPositiveFeedbackPercentage","entries","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,QAAU,0BAA0B,WAAa,6BAA6B,UAAY,4BAA4B,MAAQ,0B,mBCAhJD,EAAOC,QAAU,CAAC,QAAU,2B,+JCEb,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASC,UAAWC,IAAOC,QAA3B,UACGJ,GAAS,6BAAKA,IACdC,K,oBCgBQI,EAhBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,mBAAoBC,EAAvB,EAAuBA,UAAvB,OACtB,qBAAKL,UAAWC,IAAOK,aAAvB,SACGF,EAAmBG,KAAI,SAAAC,GAAI,OAC1B,wBACEC,KAAK,SACLT,UAAWQ,EACXE,KAAMF,EAENG,QAAS,kBAAMN,EAAUG,IAL3B,UAPUI,EAcCJ,EAbRI,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,GAAGC,gBAU7CR,GAXG,IAAAI,QCWDK,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,mBAAGlB,UAAWC,IAAOkB,UAArB,SAAiCD,OCyCxBE,EAvCI,SAAC,GAKb,IAJLC,EAII,EAJJA,cACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,oBACAL,EACI,EADJA,QAEA,OACE,8BACqB,IAAlBG,EACC,cAAC,WAAD,UACE,wBAAOrB,UAAWC,IAAOuB,WAAzB,UACGD,EAAoBhB,KAAI,SAAAC,GAAI,OAC3B,cAAC,WAAD,UACE,uBAAOR,UAAWC,IAAOwB,MAAzB,SACE,qBAAIzB,UAAWC,IAAOyB,IAAtB,UACE,gCAnBJd,EAmBiBJ,EAAK,GAlB7BI,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,GAAGC,eAkBtC,QACA,6BAAKR,EAAK,WAJDA,EAAK,IAhBlB,IAAAI,KAyBJ,wBAAOZ,UAAWC,IAAOwB,MAAzB,UACE,+BACE,yCACA,6BAAKJ,OAEP,+BACE,qDACA,+BAAKC,EAAL,mBAMR,cAAC,EAAD,CAAcJ,QAASA,OClChB,SAASS,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsBJ,mBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KAEMC,EAAc,CAAEN,OAAME,UAASE,OAmB/BG,EAAqB,WACzB,OAAOC,OAAOC,OAAOH,GAAaI,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,IAQxE,OACE,cAAC,WAAD,UACE,sBAAKzC,UAAWC,IAAOyC,QAAvB,UACE,cAAC7C,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEM,mBAAoBiC,OAAOM,KAAKR,GAChC9B,UAhCS,SAAAG,GACjB,OAAQA,GACN,IAAK,OACHsB,GAAQ,SAAAc,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,UACHZ,GAAW,SAAAD,GAAO,OAAIA,EAAU,KAChC,MACF,IAAK,MACHG,GAAO,SAAAD,GAAG,OAAIA,EAAM,KACpB,MAEF,QACE,aAuBA,cAACpC,EAAD,CAASC,MAAM,aAAf,SACE,cAAC,EAAD,CACEuB,cAAee,IACfd,iBAlB8B,WACtC,IAAMuB,EAAQT,IACd,OAAOS,EAAQC,KAAKC,MAAOlB,EAAOgB,EAAS,KAAO,EAgBxBG,GAClBzB,oBAAqBc,OAAOY,QAAQd,GACpCjB,QAAQ,gCCpDpBgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9ad51e48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"feedback_wrapper__29eCE\",\"statistics\":\"feedback_statistics__8RHTR\",\"statsItem\":\"feedback_statsItem__3ixJp\",\"table\":\"feedback_table__3Iofp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"section_section__381Lc\"};","import PropTypes from 'prop-types';\r\nimport styles from './section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={styles.section}>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport styles from '../feedback.module.css';\r\n\r\nconst uppCase = string => {\r\n  return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\r\n};\r\n\r\nconst FeedbackOptions = ({ arrayKeysFromState, onClickFn }) => (\r\n  <div className={styles.buttonsBlock}>\r\n    {arrayKeysFromState.map(item => (\r\n      <button\r\n        type=\"button\"\r\n        className={item}\r\n        name={item}\r\n        key={item}\r\n        onClick={() => onClickFn(item)}\r\n      >\r\n        {uppCase(item)}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../feedback.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <p className={styles.statistic}>{message}</p>\r\n    </>\r\n  );\r\n};\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\nexport default Notification;\r\n","import React from 'react';\r\nimport { Fragment } from 'react';\r\nimport Notification from '../Notification/notification';\r\nimport styles from '../feedback.module.css';\r\n\r\nconst uppCase = string => {\r\n  return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\r\n};\r\n\r\nconst Statistics = ({\r\n  totalFeedback,\r\n  positiveFeedback,\r\n  arrayFromStateEntry,\r\n  message,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {totalFeedback !== 0 ? (\r\n        <Fragment>\r\n          <table className={styles.statistics}>\r\n            {arrayFromStateEntry.map(item => (\r\n              <Fragment key={item[0]}>\r\n                <tbody className={styles.table}>\r\n                  <tr className={styles.row}>\r\n                    <td>{uppCase(item[0])}: </td>\r\n                    <td>{item[1]}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </Fragment>\r\n            ))}\r\n            <tbody className={styles.table}>\r\n              <tr>\r\n                <td>Total: </td>\r\n                <td>{totalFeedback}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Positive feedback: </td>\r\n                <td>{positiveFeedback} %</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </Fragment>\r\n      ) : (\r\n        <Notification message={message} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Statistics;\r\n","import './App.css';\n\nimport { useState, useEffect, Fragment } from 'react';\nimport Section from './components/Section/Section';\n\nimport styles from './components/feedback.module.css';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const objectState = { good, neutral, bad };\n\n  const onBtnClick = item => {\n    switch (item) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n      case 'neutral':\n        setNeutral(neutral => neutral + 1);\n        break;\n      case 'bad':\n        setBad(bad => bad + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return Object.values(objectState).reduce((acc, value) => acc + value, 0);\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  return (\n    <Fragment>\n      <div className={styles.wrapper}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            arrayKeysFromState={Object.keys(objectState)}\n            onClickFn={onBtnClick}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          <Statistics\n            totalFeedback={countTotalFeedback()}\n            positiveFeedback={countPositiveFeedbackPercentage()}\n            arrayFromStateEntry={Object.entries(objectState)}\n            message=\"There is no feedback\"\n          />\n        </Section>\n      </div>\n    </Fragment>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}